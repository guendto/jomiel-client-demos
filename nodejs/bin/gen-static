#!/usr/bin/env node
/*
 * -*- coding: utf-8 -*-
 *
 * jomiel-examples
 *
 * Copyright
 *  2019-2020 Toni Gündoğdu
 *
 *
 * SPDX-License-Identifier: Apache-2.0
 */

const parseOptions = () => {
  const cmdr = require("commander");

  cmdr
    .usage("[options]")
    .requiredOption(
      "-p, --proto-dir <path>",
      "Specify path to the .proto files"
    )
    .option(
      "-w, --wrapper <wrapper>",
      "Use specified wrapper; default (cjs+amd), es6, commonjs, amd, closure",
      "default"
    )
    .option(
      "-o, --output-file <path>",
      "Write output to the specified file",
      "src/messages.js"
    );

  return cmdr.parse();
};

const opts = parseOptions();

const { join } = require("path");
const glob = require("glob");

glob(join(opts.protoDir, "**/*.proto"), (err, files) => {
  if (err) throw err;

  if (files.length == 0) {
    console.log(
      `error: ${opts.protoDir}: unable to find any .proto files`
    );
    process.exit(1);
  }

  const { execFile } = require("child_process");
  const pbjs_path = "./node_modules/.bin/pbjs";

  const pbjs_args = [
    "--target",
    "static-module",
    "--wrap",
    opts.wrapper,
    "--out",
    opts.outputFile,
    "--no-verify",
    "--no-convert",
    "--no-delimited",
    "--no-beautify",
    "--no-comments",
  ];

  // console.log(pbjs_args.concat(files));

  process.stdout.write(
    "Compiling the static protobuf declarations for jomiel messages..."
  );

  const chld = execFile(
    pbjs_path,
    pbjs_args.concat(files),
    (err, stdout, stderr) => {
      if (err) throw err;
      console.log("done.");
    }
  );
});
